version: '3.8'

services:
  
  platform:
    image: "gcr.io/${PROJECT_ID}/platform"
    env_file:
      - config/dev.env
    ports: 
      - 80:6060
    networks:
      - backend
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    deploy:
      placement:
        max_replicas_per_node: 2
        constraints:
          - "node.labels==platform"

  redis:
    image: "gcr.io/${PROJECT_ID}/redis"
    networks:
      - backend
    restart: unless-stopped
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.labels==db"
  
  postgres:
    image: postgres:12.4-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: unless-stopped
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.labels==db"


  systemtests:
    image: "gcr.io/${PROJECT_ID}/systemtests"
    networks:
      - backend
    ports: 
      - 8080:8080
    restart: unless-stopped
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.role==manager"

volumes:
  postgres_data:

networks:
  backend:
